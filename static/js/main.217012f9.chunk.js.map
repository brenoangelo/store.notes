{"version":3,"sources":["hooks/useNotes.tsx","components/Input/styles.ts","components/Input/index.tsx","components/Card/styles.ts","components/Card/index.tsx","components/Aside/styles.ts","assets/img/no-notes.png","components/Aside/index.tsx","components/TextArea/styles.ts","components/TextArea/index.tsx","components/NoteContent/styles.ts","components/NoteContent/index.tsx","styles/global.ts","App.tsx","index.tsx"],"names":["NotesContext","createContext","NotesProvider","children","useState","storagedNote","localStorage","getItem","JSON","parse","notes","setNotes","Provider","value","handleAddNote","note","notesUpdated","title","trim","content","setItem","stringify","toast","success","error","handleRmvNote","noteId","event","stopPropagation","noteExists","find","id","notesFiltered","filter","handleEditNote","noteElement","index","findIndex","isSelected","forEach","splice","useNotes","useContext","Container","styled","div","Input","name","Icon","icon","rest","size","a","props","TrashButton","BiTrashAlt","Card","onClick","Intl","DateTimeFormat","format","Date","createdAt","aside","CardsContainer","Aside","noteSearched","setNoteSearched","useMemo","noteSearchedLowerCase","toLowerCase","console","log","includes","placeholder","type","IoSearchOutline","onChange","target","length","sort","b","aId","Number","bId","map","src","noNotesFigure","alt","TextArea","form","Header","header","ButtonAdd","button","MainContent","initialValues","NoteContent","cardData","setCardData","handleCreateNote","preventDefault","now","useEffect","isNoteSelected","onSubmit","e","maxLength","cardDataUpdated","handleModifyNote","GlobalStyle","createGlobalStyle","App","className","autoClose","href","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.217012f9.chunk.js","sourcesContent":["import { createContext, FormEvent, ReactNode, useContext, useState } from 'react'\nimport { toast } from 'react-toastify'\nimport { Note } from '../types';\n\ninterface NotesProviderProps {\n  children: ReactNode;\n}\n\ninterface NotesContextData {\n  notes: Note[];\n  handleAddNote: (note: Note) => void;\n  handleRmvNote: (noteId: Number | null, event: FormEvent) => void;\n  handleEditNote: (noteElement: Note) => void;\n}\n\nconst NotesContext = createContext<NotesContextData>({} as NotesContextData)\n\nexport function NotesProvider({ children }: NotesProviderProps){\n  const [notes, setNotes] = useState<Note[]>(() => {\n    const storagedNote = localStorage.getItem('@notes');\n\n    if (storagedNote) {\n      return JSON.parse(storagedNote)\n    }\n\n    return []\n  })\n\n  function handleRmvNote(noteId: Number | null, event: FormEvent) {\n    event.stopPropagation()\n\n    if(!noteId){\n      return;\n    }\n    \n    const notesUpdated = notes\n    const noteExists = notesUpdated.find(note => note.id === noteId)\n\n    if(!noteExists) {\n      toast.error('A Nota não existe.')\n      return;\n    }\n\n    const notesFiltered = notesUpdated.filter(note => note.id !== noteExists.id)\n    setNotes(notesFiltered)\n\n    localStorage.setItem('@notes', JSON.stringify(notesFiltered))\n    toast.success('Nota removida com sucesso!')\n  }\n\n  function handleAddNote(note: Note) {\n    let notesUpdated = notes\n    \n    if(note.title.trim() === '') {\n      toast.error('Título não pode ser vazio')\n      return;\n    }\n\n    if(note.content.trim() === '') {\n      toast.error('Conteúdo não pode ser vazio')\n      return;\n    }\n\n    notesUpdated = [...notesUpdated, note]\n    setNotes(notesUpdated)\n    \n    localStorage.setItem('@notes', JSON.stringify(notesUpdated))\n    toast.success('Nota criada com sucesso!')\n  }\n\n  function handleEditNote(noteElement: Note) {\n    \n    let notesUpdated = [...notes]\n    let noteExists = notesUpdated.find(note => note.id === noteElement.id)\n    \n    if(!noteExists){\n      toast.error('A nota não existe')\n      return;\n    }\n\n    const index = notesUpdated.findIndex(note => note.id === noteElement.id)\n    noteExists = {...noteExists, isSelected: !noteExists.isSelected}\n    \n    notesUpdated.forEach(note => {\n      note.isSelected = false\n    })\n\n    if(!noteElement.id){\n      toast.error('A nota não existe')\n      return;\n    }\n\n    if(noteElement.title.trim() === \"\"){\n      toast.error('Título não pode ser vazio')\n      return;\n    }\n\n    if(noteElement.content.trim() === \"\"){\n      toast.error('Conteúdo não pode ser vazio')\n      return;\n    }\n\n    if(noteExists.content !== noteElement.content\n      || noteExists.title !== noteElement.title){\n      noteExists = noteElement\n      toast.success('Nota atualizada com sucesso!')\n    }\n    \n    notesUpdated.splice(index, 1, noteExists)\n    setNotes(notesUpdated)\n    localStorage.setItem('@notes', JSON.stringify(notesUpdated))\n    \n  }\n\n  return (\n    <NotesContext.Provider \n      value={{notes, handleAddNote, handleRmvNote, handleEditNote}}\n    >\n      {children}\n    </NotesContext.Provider>\n  )\n}\n\nexport function useNotes(): NotesContextData {\n  const context = useContext(NotesContext)\n\n  return context\n}","import styled from 'styled-components'\n\nexport const Container = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 100%;\n\n  gap: 0.5rem;\n\n  svg {\n    fill: #04020F;\n  }\n\n  input {\n    line-height: 2.5rem;\n    font-size: 1.5rem;\n    font-weight: bold;\n    padding-left: 0.75rem;\n\n    width: 100%;\n\n    border: 0;\n\n    background: transparent;\n    \n    &:focus {\n      outline: 0;\n    }\n  }\n`","import { InputHTMLAttributes } from \"react\";\nimport { Container } from \"./styles\";\nimport { IconBaseProps } from 'react-icons/lib'\n\n\ninterface IInputProps extends InputHTMLAttributes<\nHTMLInputElement>{\n  name: string;\n  type: string;\n  icon?: React.ComponentType<IconBaseProps>;\n}\n\nexport function Input({ name, icon: Icon,...rest }: IInputProps) {\n  return (\n    <Container>\n      {Icon && <Icon size={28} />}\n      <input {...rest}/>\n    </Container>\n  )\n}","import styled from 'styled-components'\n\nimport { BiTrashAlt } from 'react-icons/bi'\n\ninterface ContainerProps{\n  isSelected: boolean;\n}\n\nexport const Container = styled.a<ContainerProps>`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  gap: 0.5rem;\n  padding: 1rem;\n  min-width: 16rem;\n  max-width: 16rem;\n\n  border: 2px solid ${props => props.isSelected ? '#43506E' : 'transparent'};\n  cursor: pointer;\n\n  background: var(--light-yellow);\n  margin-bottom: 1rem;\n\n  transition: border, filter 0.3s;\n\n  -webkit-box-shadow: 0px 17px 21px -6px rgba(0,0,0,0.05); \n  box-shadow: 0px 17px 21px -6px rgba(0,0,0,0.05);\n\n  &:hover {\n    border-color: var(--green);\n    filter: brightness(0.97);\n  }\n\n  h3{\n    position: relative;\n\n    &:hover {\n      svg{\n        opacity: 1;\n      }\n    }\n  }\n\n  p {\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    max-width: 100px;\n  }\n`\n\nexport const TrashButton = styled(BiTrashAlt)`\n  position: absolute;\n  right: 0.5rem;\n  top: 0.5rem;\n\n  color: #888;\n  transition: color 0.3s;\n\n  &:hover{\n    color: var(--black);\n  }\n`\n\n","import { FormEvent } from \"react\";\nimport { useNotes } from \"../../hooks/useNotes\";\nimport { Note } from \"../../types\";\nimport { TrashButton, Container } from \"./styles\";\ninterface ICardProps{\n  note: Note;\n  onClick: (event: FormEvent) => void;\n}\n\nexport function Card({ note, ...rest }: ICardProps) {\n  const { handleRmvNote } = useNotes()\n  \n  return (\n    <Container {...rest} isSelected={note.isSelected}>\n      <TrashButton\n        onClick={(event) => handleRmvNote(note.id, event)}\n      />\n      <h3>{note.title}</h3>\n      <small>{new Intl.DateTimeFormat('pt-BR').format(\n        new Date(note.createdAt)\n      )}</small>\n      <p>{note.content}</p>\n    </Container>\n  )\n}","import styled from 'styled-components'\n\nexport const Container = styled.aside`\n  flex: 3;\n  padding: 20px;\n  background: var(--white);\n\n  min-height: 40rem;\n\n  -webkit-box-shadow: 0px 5px 15px 5px rgba(87,87,87,0.28); \n  box-shadow: 0px 5px 15px 5px rgba(87,87,87,0.28);\n\n  div:nth-of-type(2){\n    margin-top: 1rem;\n  }\n\n  >div {\n    padding-right: 1rem;\n  }\n`\n\nexport const CardsContainer = styled.div`\n  overflow-y: auto;\n  max-height: 35rem;\n  min-height: 35rem;\n\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: flex-start;\n\n  figure{\n    flex: 100%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    img{\n      max-width: 15rem;\n    }\n\n    figcaption{\n      font-size: 1.5rem;\n      font-weight: 600;\n    }\n  }\n`","export default __webpack_public_path__ + \"static/media/no-notes.58e76bd5.png\";","import { useMemo, useState } from \"react\";\nimport { useNotes } from \"../../hooks/useNotes\";\nimport { Input } from \"../Input\";\nimport { Card } from \"../Card\";\n\nimport { CardsContainer, Container } from \"./styles\";\nimport noNotesFigure from '../../assets/img/no-notes.png'\n\nimport { IoSearchOutline } from 'react-icons/io5'\nimport { Note } from \"../../types\";\n\nexport function Aside() {\n  const { notes, handleEditNote } = useNotes()\n  const [noteSearched, setNoteSearched] = useState('')\n\n  function sortNotes(a:Note, b:Note) {\n\n    const aId = Number(a.id)\n    const bId = Number(b.id)\n    \n    if(aId > bId){\n      return -1\n    }\n    if(aId < bId){\n      return 1\n    }\n    return 0\n  }\n\n  const notesFiltered = useMemo(() => {\n    const noteSearchedLowerCase = noteSearched.toLowerCase()\n    console.log(noteSearchedLowerCase)\n    if(noteSearched.trim() === ''){\n      return notes;\n    }\n    return notes.filter(note => note.title.toLowerCase().includes(noteSearchedLowerCase))\n    \n  }, [noteSearched, notes])\n  \n  return (\n    <Container>\n      <Input \n        name=\"search\" \n        placeholder=\"Search a note\"\n        type=\"text\"\n        icon={IoSearchOutline}\n        value={noteSearched}\n        onChange={(event) => setNoteSearched(event.target.value)}\n      />\n\n      <CardsContainer>\n        { notesFiltered.length ?\n          notesFiltered.sort(sortNotes).map(note => (\n            <Card \n              key={note.id}\n              note={note} \n              onClick={() => handleEditNote(note)}\n            />\n          ))\n          : \n          <figure>\n            <figcaption>Não existem notas!</figcaption>\n            <img src={noNotesFigure} alt=\"Figure\" /> \n          </figure>\n        }\n      </CardsContainer>\n    </Container>\n  )\n}","import styled from 'styled-components'\n\nexport const Container = styled.div`\n  display: flex;\n  flex: 100%;\n  textarea{\n    background: transparent;\n    flex: 100%;\n    resize: none;\n    padding: 0.75rem;\n\n    border: 0;\n\n    font-size: 1.4rem;\n\n    &:focus {\n      outline: 0;\n    }\n  }\n`","import { InputHTMLAttributes } from \"react\";\nimport { Container } from \"./styles\";\n\ninterface ITextAreaProps extends InputHTMLAttributes<\nHTMLTextAreaElement>{\n  name: string;\n}\n\nexport function TextArea({ name ,...rest }: ITextAreaProps){\n  return (\n    <Container>\n      <textarea name={name} {...rest}/>\n    </Container>\n  )\n}","import styled from \"styled-components\";\n\nexport const Container = styled.form`\n  flex: 8;\n  padding: 20px;\n  background: var(--light-yellow);\n\n  min-height: 42rem;\n\n  -webkit-box-shadow: 0px 5px 15px 5px rgba(87,87,87,0.10); \n  box-shadow: 0px 5px 15px 5px rgba(87,87,87,0.10);\n\n  display: flex;\n  flex-direction: column;\n`\n\nexport const Header = styled.header`\n  display: flex;\n  width: 100%;\n`\n\nexport const ButtonAdd = styled.button`\n  background: transparent;\n  border: 0;\n\n  transition: transform 0.3s;\n\n  &:hover {\n    transform: scale(1.1);\n  }\n`\n\nexport const MainContent = styled.div`\n  flex: 100%;\n  display: flex;\n`","import { FormEvent, useState, useEffect } from \"react\"\nimport { Input } from \"../Input\"\nimport { TextArea } from \"../TextArea\"\nimport { \n  Container, \n  Header,\n  ButtonAdd, \n  MainContent \n} from \"./styles\"\n\nimport { IoIosAddCircleOutline } from 'react-icons/io'\nimport { BsPen } from 'react-icons/bs'\nimport { useNotes } from \"../../hooks/useNotes\"\n\nimport { CardData } from \"../../types\"\n\nconst initialValues = {\n  id: null,\n  title: '',\n  content: ''\n}\n\nexport function NoteContent() {\n  const { handleAddNote, handleEditNote, notes } = useNotes()\n  const [cardData, setCardData] = useState<CardData>(initialValues)\n\n  useEffect(() => {\n    const isNoteSelected = notes.find(note => note.isSelected === true)\n\n    isNoteSelected\n      ? setCardData({\n          id: isNoteSelected.id,\n          title: isNoteSelected.title,\n          content: isNoteSelected.content\n        })\n\n      : setCardData(initialValues)\n\n  },[notes])\n\n  function handleCreateNote(event: FormEvent) {\n    event.preventDefault()\n\n    handleAddNote({\n      id: Date.now(),\n      title: cardData.title,\n      content: cardData.content,\n      createdAt: new Date(),\n      isSelected: false\n    })\n  }\n\n  function handleModifyNote(event: FormEvent, cardData: CardData) {\n    event.preventDefault()\n    \n    const cardDataUpdated = {\n      id: cardData.id,\n      title: cardData.title,\n      content: cardData.content,\n      createdAt: new Date(),\n      isSelected: false\n    }\n\n    handleEditNote(cardDataUpdated)\n  }\n\n  return (\n    <Container onSubmit={handleCreateNote}>\n      <Header>\n        \n        <Input \n          name=\"title\" \n          placeholder=\"title\"\n          type=\"text\"\n          onChange={e => setCardData({...cardData, title: e.target.value})}\n          value={cardData.title}\n          maxLength={35}\n        />\n\n        {cardData.id\n          ? (\n          <ButtonAdd\n          onClick={(event) => handleModifyNote(event, cardData)}\n          >\n            <BsPen size=\"32\"/>\n          </ButtonAdd>\n        ) : (\n          <ButtonAdd\n            onClick={handleCreateNote}\n          >\n            <IoIosAddCircleOutline size=\"32\"/>\n          </ButtonAdd> \n        )}\n      </Header>\n\n      <MainContent>\n        <TextArea \n          name=\"conteudo\"\n          placeholder=\"content\"\n          onChange={e => setCardData({...cardData, content: e.target.value})}\n          value={cardData.content}\n        />\n      </MainContent>\n    </Container>\n  )\n}","import { createGlobalStyle } from 'styled-components'\nimport 'react-toastify/dist/ReactToastify.css'\n\nexport const GlobalStyle = createGlobalStyle`\n\n  :root {\n    --light-yellow: #F5F8CE;\n    --green: #43506E;\n    --black: #04020F;\n    --white: #F2F2F2;\n  }\n\n  *{\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n  }\n\n  html {\n    @media (max-width: 1080px) {\n      font-size: 93.75%;\n    }\n\n    @media (max-width: 720px) {\n      font-size: 87.5%;\n    }\n  }\n\n  body {\n    -webkit-font-smoothing: antialiased;\n  }\n\n  body, input, textarea, button {\n    font-family: 'Roboto', sans-serif;\n    font-weight: 300;\n\n    background: #606c88;\n    background: -webkit-linear-gradient(to right, #3f4c6b, #606c88);\n    background: linear-gradient(to right, #3f4c6b, #606c88); \n  }\n\n  h1, h2, h3, h4, h5, h6, strong {\n    font-weight: 700;\n  }\n\n  button {\n    cursor: pointer;\n  }\n\n  [disabled] {\n    opacity: 0.6;\n    cursor: not-allowed;\n  }\n\n  .App {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    height: 100vh;\n    max-width: 1280px;\n    \n    margin: 0 auto;\n    padding: 0 15px;\n\n    > h1 {\n      font-size: 2.5rem;\n      font-weight: 500;\n      color: var(--light-yellow);\n      padding: 0.5rem;\n      position: absolute;\n      top: 1rem;\n      left: 1rem;\n      \n    }\n  }\n\n  &::-webkit-scrollbar {\n    width: 10px;\n  }\n\n  &::-webkit-scrollbar-track {\n  background: var(--light-yellow);     \n  }\n\n  &::-webkit-scrollbar-thumb {\n    background: var(--light-yellow);    \n    border-radius: 20px;  \n    border: 1px solid rgba(0,0,0, 0.3);\n  }\n\n  a#github{\n    display: flex;\n    gap: 0.5rem;\n    align-items: center;\n\n    position: absolute;\n    bottom: 2.5rem;\n\n    font-size: 1.25rem;\n    color: #fff;\n    text-decoration: none;\n\n    transition: color 0.3s;\n\n    &:hover {\n      color: var(--light-yellow);;\n    }\n  }\n`","\nimport { Aside } from './components/Aside';\nimport { NoteContent } from './components/NoteContent';\nimport { ToastContainer } from 'react-toastify'\n\nimport { BsGithub } from 'react-icons/bs';\n\nimport { GlobalStyle } from './styles/global'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>PostIt</h1>\n      <Aside />\n      <NoteContent />\n      <GlobalStyle />\n      <ToastContainer autoClose={3000}/>\n      <a \n        id=\"github\"\n        href=\"https://github.com/brenoangelo\" \n        target=\"_blank\"\n      >\n        <BsGithub />\n        Feito por <strong>Breno Angelo</strong>\n      </a>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { NotesProvider } from './hooks/useNotes';\n\n\n\nReactDOM.render(\n  <NotesProvider>\n    <App />\n  </NotesProvider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}